openapi: 3.0.0
info:
  title: Memo App API
  description: API description in Markdown.
  version: 1.0.0
servers:
  - url: http://localhost:8000/
tags:
  - name: users
    description: Operations about user.
  - name: memo
    description: Operations about memo.
paths:
  /user/{id}:
    get:
      tags:
        - users
      operationId: getUserById
      summary: Find user by ID
      description: Returns a single user.
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - users
      operationId: deleteUserById
      summary: Delete user by ID
      description: Delete a single user.
      parameters:
        - name: id
          in: path
          description: ID of user to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user-list:
    get:
      tags:
        - users
      operationId: getUserList
      summary: Returns a list of users.
      description: Optional extended description in Markdown.
      responses:
        '200':
          description: A JSON array of user names.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/UserList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /memo:
    post:
      tags:
        - memo
      operationId: createMemo
      summary: Create a new memo
      description: Creates a new memo.
      requestBody:
        description: Memo object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Memo'
        required: true
      responses:
        '201':
          description: Memo created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Memo'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /memo/{id}:
    get:
      tags:
        - memo
      operationId: getMemoById
      summary: Find memo by ID
      description: Returns a single memo.
      parameters:
        - name: id
          in: path
          description: ID of memo to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Memo'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - memo
      operationId: updateMemo
      summary: Update an existing memo
      description: Update an existing memo.
      parameters:
        - name: id
          in: path
          description: ID of memo to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Memo object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Memo'
        required: true
      responses:
        '200':
          description: Memo updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Memo'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - memo
      operationId: deleteMemoById
      summary: Delete memo by ID
      description: Delete a single memo.
      parameters:
        - name: id
          in: path
          description: ID of memo to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Memo'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /memo-list:
    get:
      tags:
        - memo
      operationId: getMemoList
      summary: Returns a list of memos.
      description: Optional extended description in Markdown.
      responses:
        '200':
          description: A JSON array of memo.
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/MemoList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      required:
        - message
        - code
      properties:
        message:
          type: string
        code:
          type: integer
        data:
          type: object
    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      example:
        id: 1
        name: user1
    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'
      example:
        - id: 1
          name: user1
        - id: 2
          name: user2
    Memo:
      type: object
      required:
        - id
        - title
        - content
        - user_id
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        user_id:
          type: integer
          format: int64
      example:
        id: 1
        title: memo1
        content: memo1 content
        user_id: 1
    MemoList:
      type: array
      items:
        $ref: '#/components/schemas/Memo'
      example:
        - id: 1
          title: memo1
          content: memo1 content
          user_id: 1
        - id: 2
          title: memo2
          content: memo2 content
          user_id: 1
